{
	"@context": ["http://w3c.github.io/wot/w3c-wot-td-context.jsonld"],
	"@type": "Thing",
	"name": "MyTemperatureThing",
	"base": "coap://mytemp.example.com:5683/",
	"interactions": [{
		"@type": ["Property"],
		"name": "temperature",
		"writable": false,
		"output": { "type": "number" }, // there was an intermediate node "valueType"
		// "outputType": { "valueType": { "type": "number" }, <semantics>} // this was used to pair the JSON Schema with a semantic annotation, but ... see below
		"links": [{
			"href" : "temp",
			"type": "application/cbor"
		},
		{
			"href" : "http://mytemp.example.com:8080/temp",
			"type": "application/json",
			"rel": "alternate", // this together with anchor would be way to encode alternatives, i.e., 
			"anchor": "temp"
		}]
	},
	{
		"@type": ["Property"],
		"name": "setpoint",
		"writable": true,
		"output": { "type": "number", "actuator:unit": "actuator:cel" }, // this is the level, where we need semantic annotations, not for the whole valueType
		"input": { // we need a proper hypermedia form here (see Action and think about explicit bindings: which method to use?)
			"type": "object",
			"properties": {
				"actuator:setpoint": { "type": "number", "actuator:unit": "actuator:cel" },
				"actuator:priority": { "type": "integer", "minimum": 0, "maximum": 16 }
			}
		},
		"links": [{
			"href" : "set",
			"type": "application/json"
		}]
	},
	{
		"@type": ["Property"],
		"name": "icon",
		"writable": false,
		"output": "blob", // application (=user code) must know Media Type; we need this information to interface with the Scripting API
		"links": [{
			"href" : "ico",
			"type": "image/jpeg"
		}]
	},
	{
		"@type": ["Action"],
		"name": "pause",
		"input": { "type": "integer", "actuator:unit": "actuator:s" },
		"output": // what if output is in application/td+json to describe interactions on the task? Then the Media Type is different for input and output! We actually need a proper hypermedia form for the input.
		"links": [{
			"href" : "pause",
			"type": "application/json"
		}]
	},
	{
		"@type": ["Event"],
		"name": "alert",
		"output": {
			"type": "object",
			"properties": {
				"actuator:code": { "type": "integer" },
				"actuator:description": { "type": "string" }
			}
		},
		"links": [{
			"href" : "amqp://mytemp.example.com:5672/events", // see https://www.rabbitmq.com/uri-spec.html (but no official spec, nor registered with IANA)
			"type": "application/json" // AMQP appears to have a Content-Type header
		}]
	}]
}
